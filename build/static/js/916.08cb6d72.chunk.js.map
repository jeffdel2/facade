{"version":3,"file":"static/js/916.08cb6d72.chunk.js","mappings":"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","sources":["pages/Profile.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { \n  Typography, \n  Box, \n  Avatar, \n  Card,\n  CardContent,\n  LinearProgress,\n  Chip,\n  TextField,\n  Button,\n  Snackbar,\n  Alert,\n\n} from '@mui/material';\nimport { \n  StarOutline as StarIcon,\n  CalendarToday as CalendarIcon,\n  ShoppingBag as ShoppingBagIcon,\n  Loyalty as LoyaltyIcon,\n  Edit as EditIcon,\n  Save as SaveIcon\n} from '@mui/icons-material';\nimport { useTheme as useMuiTheme } from '@mui/material/styles';\n\n\ninterface UserMetadata {\n  address?: string;\n  phone?: string;\n  birthdate?: string;\n  preferences?: {\n    notifications?: boolean;\n    newsletter?: boolean;\n  };\n}\n\nconst ProfileStat: React.FC<{\n  icon: React.ReactNode;\n  label: string;\n  value: string;\n}> = ({ icon, label, value }) => (\n  <Box sx={{ \n    display: 'flex', \n    alignItems: 'center', \n    gap: 1.5,\n    p: 2,\n    backgroundColor: 'rgba(0, 0, 0, 0.02)',\n    borderRadius: 2,\n  }}>\n    <Box sx={{ color: 'primary.main' }}>\n      {icon}\n    </Box>\n    <Box>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {label}\n      </Typography>\n      <Typography variant=\"subtitle1\" fontWeight=\"medium\">\n        {value}\n      </Typography>\n    </Box>\n  </Box>\n);\n\nconst Profile: React.FC = () => {\n  const { user, isAuthenticated, isLoading, getAccessTokenSilently } = useAuth0();\n\n  const muiTheme = useMuiTheme();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [snackbar, setSnackbar] = useState<{\n    open: boolean;\n    message: string;\n    severity: 'success' | 'error';\n  }>({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  const [userMetadata, setUserMetadata] = useState<UserMetadata>({\n    address: '',\n    phone: '',\n    birthdate: '',\n    preferences: {\n      notifications: true,\n      newsletter: true\n    }\n  });\n\n  useEffect(() => {\n    const getUserMetadata = async () => {\n      try {\n        const accessToken = await getAccessTokenSilently();\n        const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n        const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user?.sub}`;\n\n        const metadataResponse = await fetch(userDetailsByIdUrl, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n\n        const { user_metadata } = await metadataResponse.json();\n        \n        if (user_metadata) {\n          setUserMetadata(user_metadata);\n        }\n      } catch (error) {\n        console.error('Error fetching user metadata:', error);\n      }\n    };\n\n    if (user?.sub) {\n      getUserMetadata();\n    }\n  }, [getAccessTokenSilently, user?.sub]);\n\n  const handleSaveMetadata = async () => {\n    setIsSaving(true);\n    try {\n      const accessToken = await getAccessTokenSilently();\n      const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n      const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user?.sub}`;\n\n      await fetch(userDetailsByIdUrl, {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ user_metadata: userMetadata })\n      });\n\n      setSnackbar({\n        open: true,\n        message: 'Profile updated successfully!',\n        severity: 'success'\n      });\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating user metadata:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to update profile. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Box sx={{ width: '100%', mt: 4 }}>\n        <LinearProgress />\n      </Box>\n    );\n  }\n\n  if (!isAuthenticated || !user) {\n    return (\n      <Box sx={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        minHeight: '50vh' \n      }}>\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          Please log in to view your profile.\n        </Typography>\n      </Box>\n    );\n  }\n\n  // Mock data - in a real app, this would come from your backend\n  const membershipData = {\n    points: 1250,\n    status: 'Gold Member',\n    memberSince: 'January 2024',\n    lastPurchase: 'March 15, 2024',\n    progress: 75, // percentage to next tier\n    pointsToNext: 250\n  };\n\n  return (\n    <Box sx={{ maxWidth: 1200, mx: 'auto', p: { xs: 2, md: 4 } }}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 4 }}>\n        {/* Profile Header */}\n        <Card sx={{ \n          position: 'relative',\n          overflow: 'visible',\n          background: `linear-gradient(45deg, ${muiTheme.palette.primary.main}, ${muiTheme.palette.secondary.main})`,\n          color: 'white',\n          p: 2\n        }}>\n          <Box sx={{ \n            display: 'flex', \n            flexDirection: { xs: 'column', sm: 'row' },\n            alignItems: { xs: 'center', sm: 'flex-start' },\n            gap: 3,\n            position: 'relative',\n            zIndex: 1\n          }}>\n            <Avatar\n              src={user.picture}\n              alt={user.name}\n              sx={{ \n                width: 120, \n                height: 120,\n                border: '4px solid white',\n                boxShadow: 2\n              }}\n            />\n            <Box sx={{ \n              flex: 1,\n              textAlign: { xs: 'center', sm: 'left' }\n            }}>\n              <Typography variant=\"h4\" gutterBottom fontWeight=\"bold\">\n                {user.name}\n              </Typography>\n              <Typography variant=\"body1\" sx={{ opacity: 0.9 }}>\n                {user.email}\n              </Typography>\n              <Chip \n                label={membershipData.status}\n                sx={{ \n                  mt: 1,\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                  color: 'white',\n                  '& .MuiChip-label': {\n                    fontWeight: 'medium'\n                  }\n                }}\n              />\n            </Box>\n          </Box>\n        </Card>\n\n        {/* Stats Grid */}\n        <Box sx={{ \n          display: 'grid',\n          gridTemplateColumns: {\n            xs: '1fr',\n            sm: 'repeat(2, 1fr)',\n            md: 'repeat(4, 1fr)'\n          },\n          gap: 2\n        }}>\n          <ProfileStat\n            icon={<LoyaltyIcon />}\n            label=\"Reward Points\"\n            value={membershipData.points.toLocaleString()}\n          />\n          <ProfileStat\n            icon={<StarIcon />}\n            label=\"Member Status\"\n            value={membershipData.status}\n          />\n          <ProfileStat\n            icon={<CalendarIcon />}\n            label=\"Member Since\"\n            value={membershipData.memberSince}\n          />\n          <ProfileStat\n            icon={<ShoppingBagIcon />}\n            label=\"Last Purchase\"\n            value={membershipData.lastPurchase}\n          />\n        </Box>\n\n        {/* Membership Progress */}\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Progress to Next Tier\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Current: {membershipData.status}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {membershipData.pointsToNext} points to next tier\n                </Typography>\n              </Box>\n              <LinearProgress \n                variant=\"determinate\" \n                value={membershipData.progress}\n                sx={{ \n                  height: 8,\n                  borderRadius: 4,\n                  backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                  '& .MuiLinearProgress-bar': {\n                    borderRadius: 4\n                  }\n                }}\n              />\n            </Box>\n          </CardContent>\n        </Card>\n\n        {/* Profile Details */}\n        <Card>\n          <CardContent>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n              <Typography variant=\"h6\">\n                Profile Details\n              </Typography>\n              <Button\n                startIcon={isEditing ? <SaveIcon /> : <EditIcon />}\n                variant={isEditing ? \"contained\" : \"outlined\"}\n                onClick={isEditing ? handleSaveMetadata : () => setIsEditing(true)}\n                disabled={isSaving}\n              >\n                {isEditing ? (isSaving ? 'Saving...' : 'Save Changes') : 'Edit Profile'}\n              </Button>\n            </Box>\n            \n            <Box sx={{ \n              display: 'grid', \n              gridTemplateColumns: { xs: '1fr', sm: 'repeat(2, 1fr)' },\n              gap: 3 \n            }}>\n              <TextField\n                fullWidth\n                label=\"Address\"\n                value={userMetadata.address || ''}\n                onChange={(e) => setUserMetadata(prev => ({ ...prev, address: e.target.value }))}\n                disabled={!isEditing}\n                margin=\"normal\"\n              />\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                value={userMetadata.phone || ''}\n                onChange={(e) => setUserMetadata(prev => ({ ...prev, phone: e.target.value }))}\n                disabled={!isEditing}\n                margin=\"normal\"\n              />\n              <TextField\n                fullWidth\n                label=\"Birth Date\"\n                type=\"date\"\n                value={userMetadata.birthdate || ''}\n                onChange={(e) => setUserMetadata(prev => ({ ...prev, birthdate: e.target.value }))}\n                disabled={!isEditing}\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\n      >\n        <Alert \n          onClose={() => setSnackbar(prev => ({ ...prev, open: false }))} \n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default Profile; "],"names":["ProfileStat","_ref","icon","label","value","_jsxs","Box","sx","display","alignItems","gap","p","backgroundColor","borderRadius","children","_jsx","color","Typography","variant","fontWeight","Profile","user","isAuthenticated","isLoading","getAccessTokenSilently","useAuth0","muiTheme","useMuiTheme","isEditing","setIsEditing","useState","isSaving","setIsSaving","snackbar","setSnackbar","open","message","severity","userMetadata","setUserMetadata","address","phone","birthdate","preferences","notifications","newsletter","useEffect","sub","async","accessToken","userDetailsByIdUrl","concat","process","REACT_APP_AUTH0_DOMAIN","metadataResponse","fetch","headers","Authorization","user_metadata","json","error","console","getUserMetadata","width","mt","LinearProgress","justifyContent","minHeight","membershipData","points","status","memberSince","lastPurchase","progress","pointsToNext","maxWidth","mx","xs","md","flexDirection","Card","position","overflow","background","palette","primary","main","secondary","sm","zIndex","Avatar","src","picture","alt","name","height","border","boxShadow","flex","textAlign","gutterBottom","opacity","email","Chip","gridTemplateColumns","LoyaltyIcon","toLocaleString","StarIcon","CalendarIcon","ShoppingBagIcon","CardContent","mb","Button","startIcon","SaveIcon","EditIcon","onClick","method","body","JSON","stringify","disabled","TextField","fullWidth","onChange","e","prev","_objectSpread","target","margin","type","InputLabelProps","shrink","Snackbar","autoHideDuration","onClose","Alert"],"sourceRoot":""}